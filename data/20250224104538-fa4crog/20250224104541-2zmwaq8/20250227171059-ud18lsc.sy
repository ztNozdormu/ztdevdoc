{"ID":"20250227171059-ud18lsc","Spec":"1","Type":"NodeDocument","Properties":{"id":"20250227171059-ud18lsc","title":"优秀实践建议","type":"doc","updated":"20250227174434"},"Children":[{"ID":"20250227171059-otuxskf","Type":"NodeHeading","HeadingLevel":3,"Properties":{"id":"20250227171059-otuxskf","updated":"20250227174434"},"Children":[{"Type":"NodeText","Data":"全局变量初始化"}]},{"ID":"20250227171134-chpt530","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250227171134-chpt530","updated":"20250227171145"},"Children":[{"ID":"20250227171145-otk3ea5","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250227171145-otk3ea5","updated":"20250227171145"},"Children":[{"ID":"20250227171145-9tx178l","Type":"NodeParagraph","Properties":{"id":"20250227171145-9tx178l","updated":"20250227173646"},"Children":[{"Type":"NodeText","Data":"同步代码用OnceLock"}]},{"ID":"20250227173914-7bwejue","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227173914-7bwejue","updated":"20250227174249"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"use std::sync::OnceLock;\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250227171154-rr2kelh","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227171154-rr2kelh","updated":"20250227173633"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"pub fn user_config() -\u003e \u0026'static UserConfig {\n    static CACHED: std::sync::OnceLock\u003cUserConfig\u003e = std::sync::OnceLock::new();\n    CACHED.get_or_init(|| {\n        let json_file_path = \"./test.json\";\n        let json_file_content = std::fs::read_to_string(json_file_path).unwrap();\n        let json_config: UserConfig = serde_json::from_str(\u0026json_file_content).unwrap();\n        json_config\n    });\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]},{"ID":"20250227171150-v0tzx09","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250227171150-v0tzx09","updated":"20250227171150"},"Children":[{"ID":"20250227171150-v5shh9o","Type":"NodeParagraph","Properties":{"id":"20250227171150-v5shh9o","updated":"20250227173703"},"Children":[{"Type":"NodeText","Data":"异步代码，用tikio::sync::OnceCell"}]},{"ID":"20250227173903-1ew5n1l","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227173903-1ew5n1l","updated":"20250227173907"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"use once_cell::sync::Lazy;\nuse tokio::sync::{Mutex, OnceCell};\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250227173409-fmr20x4","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227173409-fmr20x4","updated":"20250227173844"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"async fn robot() -\u003e \u0026'static TradingRobot {\n    static GLOBAL_ROBOT: Lazy\u003cOnceCell\u003cTradingRobot\u003e\u003e = Lazy::new(|| OnceCell::new());\n    GLOBAL_ROBOT.get_or_init(|| async {\n        let robot = TradingRobot::launch().await.expect(\"Cannot launch TradingRobot\");\n        info!(\"robot global initialized successfully\");\n        robot\n    }).await\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20250227173406-w3tvvdp","Type":"NodeHeading","HeadingLevel":4,"Properties":{"id":"20250227173406-w3tvvdp","updated":"20250227174434"},"Children":[{"Type":"NodeText","Data":"redis集成"}]},{"ID":"20250227174322-94mbiex","Type":"NodeList","ListData":{"Typ":1},"Properties":{"id":"20250227174322-94mbiex","updated":"20250227174429"},"Children":[{"ID":"20250227174324-61icdv1","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"MS4=","Num":1},"Properties":{"id":"20250227174324-61icdv1","updated":"20250227174324"},"Children":[{"ID":"20250227174324-weaelqj","Type":"NodeParagraph","Properties":{"id":"20250227174324-weaelqj","updated":"20250227174330"},"Children":[{"Type":"NodeText","Data":"bb8集成"}]}]},{"ID":"20250227174330-spydsgw","Type":"NodeListItem","ListData":{"Typ":1,"Delimiter":46,"Marker":"Mi4=","Num":2},"Properties":{"id":"20250227174330-spydsgw","updated":"20250227174429"},"Children":[{"ID":"20250227174330-cf0hvhu","Type":"NodeParagraph","Properties":{"id":"20250227174330-cf0hvhu","updated":"20250227174335"},"Children":[{"Type":"NodeText","Data":"deadool集成"}]},{"ID":"20250227174340-36zc6xl","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227174340-36zc6xl","updated":"20250227174357"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"deadpool-redis = { version =\"0.19.0\" }   \n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]},{"ID":"20250227174337-20oeo44","Type":"NodeCodeBlock","IsFencedCodeBlock":true,"Properties":{"id":"20250227174337-20oeo44","updated":"20250227174429"},"Children":[{"Type":"NodeCodeBlockFenceOpenMarker","Data":"```"},{"Type":"NodeCodeBlockFenceInfoMarker","CodeBlockInfo":"c2hlbGw="},{"Type":"NodeCodeBlockCode","Data":"use std::env;\nuse deadpool_redis::{redis::{cmd, FromRedisValue}, Config, ConnectionAddr, ConnectionInfo, ProtocolVersion, RedisConnectionInfo, Runtime};\n\n#[tokio::main]\nasync fn main() {\n\n    let rci = RedisConnectionInfo{\n        db: 0,\n        username: None,\n        password: Some(\"knd@123456\".to_string()),\n        protocol: ProtocolVersion::RESP2,\n    };\n\n    let conn_info = ConnectionInfo {\n        addr: ConnectionAddr::Tcp(\"192.168.1.248\".to_string(), 6379),\n        redis: rci,\n    };\n\n    // let mut cfg = Config::from_url(env::var(\"192.168.1.248:6379\").unwrap());\n    let mut cfg = Config::from_connection_info(conn_info);\n\n    let pool = cfg.create_pool(Some(Runtime::Tokio1)).unwrap();\n    {\n        let mut conn = pool.get().await.unwrap();\n        cmd(\"SET\")\n            .arg(\u0026[\"deadpool/test_key\", \"42\"])\n            .query_async::\u003c()\u003e(\u0026mut conn)\n            .await.unwrap();\n    }\n    {\n        let mut conn = pool.get().await.unwrap();\n        let value: String = cmd(\"GET\")\n            .arg(\u0026[\"deadpool/test_key\"])\n            .query_async(\u0026mut conn)\n            .await.unwrap();\n        assert_eq!(value, \"42\".to_string());\n    }\n}\n"},{"Type":"NodeCodeBlockFenceCloseMarker","Data":"```"}]}]}]},{"ID":"20250227174412-ye2t9vr","Type":"NodeParagraph","Properties":{"id":"20250227174412-ye2t9vr","updated":"20250227174434"}}]}